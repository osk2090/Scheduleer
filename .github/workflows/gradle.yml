# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: scheduleer-code-deploy
  RESOURCE_PATH: ./src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: scheduleer-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: scheduleer

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.url: ${{ secrets.MYSQL_DATABASE }}
          spring.datasource.username: ${{ secrets.MYSQL_USER }}
          spring.datasource.password: ${{ secrets.MYSQL_PASSWORD }}
          jwt.secret-key: ${{ secrets.JWT_SECRET_KEY }}
          services.scheduleer-mysql.environment.MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          cloud.aws.credentials.accessKey: ${{ secrets.ACCESS_KEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.SECRET_KEY }}
          cloud.aws.region.static: ${{ secrets.REGION }}
          cloud.aws.s3.bucket: ${{ secrets.BUCKET }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
          # uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        # with:
        # arguments: build
        run : ./gradlew clean build --exclude-task test
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: upload to S3
        run: aws deploy push --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} --ignore-hidden-files --s3-location s3://$S3_BUCKET_NAME/cicdtest/$GITHUB_SHA.zip --source .

      - name: deploy to EC2
        run: aws deploy create-deployment --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} --s3-location bucket=$S3_BUCKET_NAME,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
